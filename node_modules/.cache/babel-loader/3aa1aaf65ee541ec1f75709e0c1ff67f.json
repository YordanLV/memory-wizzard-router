{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FlowContext } from \"./flowProvider\";\n\nconst useFlowControls = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    currentScreen,\n    setCurrentScreen,\n    screens\n  } = useContext(FlowContext);\n  const totalScreens = screens.length;\n\n  const nextScreen = () => {\n    if (currentScreen < totalScreens - 1) {\n      setCurrentScreen(currentScreen + 1);\n      history.push(`/screen-${currentScreen + 1}`);\n    }\n  };\n\n  const prevScreen = () => {\n    if (currentScreen > 0) {\n      setCurrentScreen(currentScreen - 1);\n      history.push(`/screen-${currentScreen - 1}`);\n    }\n  };\n\n  const goToScreen = screenName => {\n    const screenIndex = screens.find((screen, index) => {\n      if (screen.name === screenName) return index;\n      return false;\n    });\n\n    if (screenIndex) {\n      setCurrentScreen(screenIndex);\n      history.push(`/screen-${screenIndex}`);\n    }\n  };\n\n  return [nextScreen, prevScreen, goToScreen];\n};\n\n_s(useFlowControls, \"tzYpCeOdao6bkFrTr4HcbFTd2yo=\", false, function () {\n  return [useHistory];\n});\n\nexport default useFlowControls;","map":{"version":3,"sources":["/Users/yordanlasonov/Documents/GitHub/memory-wizzard-router/src/components/useFlowControls.js"],"names":["useContext","useHistory","FlowContext","useFlowControls","history","currentScreen","setCurrentScreen","screens","totalScreens","length","nextScreen","push","prevScreen","goToScreen","screenName","screenIndex","find","screen","index","name"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM;AAAEI,IAAAA,aAAF;AAAiBC,IAAAA,gBAAjB;AAAmCC,IAAAA;AAAnC,MAA+CP,UAAU,CAACE,WAAD,CAA/D;AAEA,QAAMM,YAAY,GAAGD,OAAO,CAACE,MAA7B;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIL,aAAa,GAAGG,YAAY,GAAG,CAAnC,EAAsC;AACpCF,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACAD,MAAAA,OAAO,CAACO,IAAR,CAAc,WAAUN,aAAa,GAAG,CAAE,EAA1C;AACD;AACF,GALD;;AAOA,QAAMO,UAAU,GAAG,MAAM;AACvB,QAAIP,aAAa,GAAG,CAApB,EAAuB;AACrBC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACAD,MAAAA,OAAO,CAACO,IAAR,CAAc,WAAUN,aAAa,GAAG,CAAE,EAA1C;AACD;AACF,GALD;;AAOA,QAAMQ,UAAU,GAAIC,UAAD,IAAgB;AACjC,UAAMC,WAAW,GAAGR,OAAO,CAACS,IAAR,CAAa,CAACC,MAAD,EAASC,KAAT,KAAmB;AAClD,UAAID,MAAM,CAACE,IAAP,KAAgBL,UAApB,EAAgC,OAAOI,KAAP;AAChC,aAAO,KAAP;AACD,KAHmB,CAApB;;AAIA,QAAIH,WAAJ,EAAiB;AACfT,MAAAA,gBAAgB,CAACS,WAAD,CAAhB;AACAX,MAAAA,OAAO,CAACO,IAAR,CAAc,WAAUI,WAAY,EAApC;AACD;AACF,GATD;;AAWA,SAAO,CAACL,UAAD,EAAaE,UAAb,EAAyBC,UAAzB,CAAP;AACD,CAhCD;;GAAMV,e;UACYF,U;;;AAiClB,eAAeE,eAAf","sourcesContent":["import { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FlowContext } from \"./flowProvider\";\n\nconst useFlowControls = () => {\n  const history = useHistory();\n  const { currentScreen, setCurrentScreen, screens } = useContext(FlowContext);\n\n  const totalScreens = screens.length;\n\n  const nextScreen = () => {\n    if (currentScreen < totalScreens - 1) {\n      setCurrentScreen(currentScreen + 1);\n      history.push(`/screen-${currentScreen + 1}`);\n    }\n  };\n\n  const prevScreen = () => {\n    if (currentScreen > 0) {\n      setCurrentScreen(currentScreen - 1);\n      history.push(`/screen-${currentScreen - 1}`);\n    }\n  };\n\n  const goToScreen = (screenName) => {\n    const screenIndex = screens.find((screen, index) => {\n      if (screen.name === screenName) return index\n      return false;\n    });\n    if (screenIndex) {\n      setCurrentScreen(screenIndex);\n      history.push(`/screen-${screenIndex}`);\n    }\n  };\n\n  return [nextScreen, prevScreen, goToScreen];\n};\n\nexport default useFlowControls;\n"]},"metadata":{},"sourceType":"module"}