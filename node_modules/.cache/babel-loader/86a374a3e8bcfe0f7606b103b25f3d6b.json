{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { FlowContext } from \"./flowProvider\";\n\nconst useFlowControls = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    currentScreen,\n    setCurrentScreen\n  } = useContext(FlowContext);\n\n  const nextScreen = () => {\n    setCurrentScreen(currentScreen + 1);\n    history.push(`/screen-${currentScreen + 1}`);\n  };\n\n  const prevScreen = () => {\n    setCurrentScreen(currentScreen - 1);\n    history.push(`/screen-${currentScreen - 1}`);\n  };\n\n  return [nextScreen, prevScreen];\n};\n\n_s(useFlowControls, \"j1mY/KfgdQQpsP6FdFWWllMAbAQ=\", false, function () {\n  return [useHistory];\n});\n\nexport default useFlowControls;","map":{"version":3,"sources":["/Users/yordanlasonov/Documents/GitHub/memory-wizzard-router/src/components/useFlowControls.js"],"names":["useContext","useHistory","FlowContext","useFlowControls","history","currentScreen","setCurrentScreen","nextScreen","push","prevScreen"],"mappings":";;AAAA,SAAQA,UAAR,QAA0B,OAA1B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM;AAAEI,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAsCN,UAAU,CAACE,WAAD,CAAtD;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACvBD,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACAD,IAAAA,OAAO,CAACI,IAAR,CAAc,WAAUH,aAAa,GAAG,CAAE,EAA1C;AACD,GAHD;;AAKA,QAAMI,UAAU,GAAG,MAAM;AACvBH,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACAD,IAAAA,OAAO,CAACI,IAAR,CAAc,WAAUH,aAAa,GAAG,CAAE,EAA1C;AACD,GAHD;;AAKA,SAAO,CAACE,UAAD,EAAaE,UAAb,CAAP;AACH,CAfD;;GAAMN,e;UACcF,U;;;AAgBpB,eAAeE,eAAf","sourcesContent":["import{ useContext } from \"react\";\nimport {useHistory} from 'react-router-dom';\nimport { FlowContext } from \"./flowProvider\";\n\nconst useFlowControls = () => {\n    const history = useHistory();\n    const { currentScreen, setCurrentScreen } = useContext(FlowContext)\n    \n    const nextScreen = () => {\n      setCurrentScreen(currentScreen + 1);\n      history.push(`/screen-${currentScreen + 1}`);\n    }\n    \n    const prevScreen = () => {\n      setCurrentScreen(currentScreen - 1);\n      history.push(`/screen-${currentScreen - 1}`);\n    }\n\n    return [nextScreen, prevScreen]\n};\n\nexport default useFlowControls;"]},"metadata":{},"sourceType":"module"}