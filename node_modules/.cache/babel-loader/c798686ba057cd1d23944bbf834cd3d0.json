{"ast":null,"code":"var _jsxFileName = \"/Users/yordanlasonov/Documents/GitHub/memory-wizzard-router/src/components/wizard.js\";\nimport React from \"react\";\nimport { Link, MemoryRouter as Router, Route, Redirect } from \"react-router-dom\"; // export const Wizard = ({ children }) => {\n//   const steps = React.Children.toArray(children);\n//   return (\n//     <Router>\n//       <Template path=\"/:currentPath\" steps={steps} />\n//       <Redirect from=\"/\" to={steps[0].props.path} noThrow/>\n//     </Router>\n//   );\n// };\n// export const Step = ({ children }) => children;\n// function Template({ currentPath, steps }) {\n//   console.log(currentPath);\n//   const currentIndex = steps.findIndex(step => step.props.path === currentPath);\n//   const prevStep = currentIndex > 0 && steps[currentIndex - 1].props;\n//   const nextStep =\n//     currentIndex < steps.length - 1 && steps[currentIndex + 1].props;\n//   if (currentIndex < 0) {\n//     return <NoMatch path={steps[0].props.path} />;\n//   };\n//   return (\n//     <div>\n//       <nav className=\"btn-group d-flex\">\n//         {steps.map((step, index) => (\n//           <Route\n//             key={step.props.title}\n//             to={`../${step.props.path}`}\n//             getProps={isActive}\n//             title={step.props.description}\n//           >\n//             {console.log(step)};\n//             {step.props.title}\n//           </Route>\n//         ))}\n//       </nav>\n//       {steps[currentIndex]}\n//       <div className=\"mt-2 d-flex justify-content-between\">\n//         <Button path={prevStep.path} title={prevStep.description}>\n//           Back\n//         </Button>\n//         <Button path={nextStep.path} title={nextStep.description}>\n//           Next\n//         </Button>\n//       </div>\n//     </div>\n//   );\n// }\n// function NoMatch(props) {\n//   return <Redirect to={props.path} noThrow />;\n// }\n// function Button({ path, ...props }) {\n//   return (\n//     <Link\n//       to={`../${path}`}\n//       className={path ? \"btn btn-primary\" : \"invisible\"}\n//       {...props}\n//     />\n//   );\n// }\n// function isActive({ isCurrent }) {\n//   return {\n//     className: \"btn btn-primary flex-fill\" + (isCurrent ? \" active\" : \"\")\n//   };\n// }\n\nconst IndexPage = () => {\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }\n  }, \"Home Page\");\n};\n\n_c = IndexPage;\n\nconst AboutPage = () => {\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }\n  }, \"About Page\");\n};\n\n_c2 = AboutPage;\nexport default function MyApp() {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"About\"), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: IndexPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: AboutPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })));\n}\n_c3 = MyApp;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IndexPage\");\n$RefreshReg$(_c2, \"AboutPage\");\n$RefreshReg$(_c3, \"MyApp\");","map":{"version":3,"sources":["/Users/yordanlasonov/Documents/GitHub/memory-wizzard-router/src/components/wizard.js"],"names":["React","Link","MemoryRouter","Router","Route","Redirect","IndexPage","AboutPage","MyApp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,YAAY,IAAIC,MAA/B,EAAuCC,KAAvC,EAA8CC,QAA9C,QAA8D,kBAA9D,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,CAFD;;KAAMA,S;;AAIN,MAAMC,SAAS,GAAG,MAAM;AACtB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,CAFD;;MAAMA,S;AAIN,eAAe,SAASC,KAAT,GAAiB;AAC9B,sBACE;AAAS,IAAA,SAAS,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEF,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAUD;MAXuBC,K","sourcesContent":["import React from \"react\";\nimport { Link, MemoryRouter as Router, Route, Redirect } from \"react-router-dom\";\n\n// export const Wizard = ({ children }) => {\n//   const steps = React.Children.toArray(children);\n//   return (\n//     <Router>\n//       <Template path=\"/:currentPath\" steps={steps} />\n//       <Redirect from=\"/\" to={steps[0].props.path} noThrow/>\n//     </Router>\n//   );\n// };\n\n// export const Step = ({ children }) => children;\n\n// function Template({ currentPath, steps }) {\n\n//   console.log(currentPath);\n//   const currentIndex = steps.findIndex(step => step.props.path === currentPath);\n//   const prevStep = currentIndex > 0 && steps[currentIndex - 1].props;\n//   const nextStep =\n//     currentIndex < steps.length - 1 && steps[currentIndex + 1].props;\n\n//   if (currentIndex < 0) {\n//     return <NoMatch path={steps[0].props.path} />;\n//   };\n//   return (\n//     <div>\n//       <nav className=\"btn-group d-flex\">\n//         {steps.map((step, index) => (\n//           <Route\n//             key={step.props.title}\n//             to={`../${step.props.path}`}\n//             getProps={isActive}\n//             title={step.props.description}\n//           >\n//             {console.log(step)};\n//             {step.props.title}\n//           </Route>\n//         ))}\n//       </nav>\n\n//       {steps[currentIndex]}\n\n//       <div className=\"mt-2 d-flex justify-content-between\">\n//         <Button path={prevStep.path} title={prevStep.description}>\n//           Back\n//         </Button>\n//         <Button path={nextStep.path} title={nextStep.description}>\n//           Next\n//         </Button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function NoMatch(props) {\n//   return <Redirect to={props.path} noThrow />;\n// }\n\n// function Button({ path, ...props }) {\n//   return (\n//     <Link\n//       to={`../${path}`}\n//       className={path ? \"btn btn-primary\" : \"invisible\"}\n//       {...props}\n//     />\n//   );\n// }\n\n// function isActive({ isCurrent }) {\n//   return {\n//     className: \"btn btn-primary flex-fill\" + (isCurrent ? \" active\" : \"\")\n//   };\n// }\n\nconst IndexPage = () => {\n  return <h3>Home Page</h3>;\n};\n\nconst AboutPage = () => {\n  return <h3>About Page</h3>;\n};\n\nexport default function MyApp() {\n  return (\n    <section className=\"App\">\n      <Router>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/about\">About</Link>\n        <Route exact path=\"/\" component={IndexPage} />\n        <Route exact path=\"/about\" component={AboutPage} />\n      </Router>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}