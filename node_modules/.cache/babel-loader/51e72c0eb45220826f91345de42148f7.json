{"ast":null,"code":"var _jsxFileName = \"/Users/yordanlasonov/Documents/GitHub/memory-wizzard-router/src/components/flowProvider.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { createContext, useState } from \"react\";\nimport { MemoryRouter as Router } from \"react-router-dom\";\nconst Context = /*#__PURE__*/createContext();\n\nfunction FlowProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [screens, setScreens] = useState([]);\n  const [screen, setScreen] = useState(0);\n\n  function setInputScreens(inputScreens) {\n    setScreens(inputScreens);\n  }\n\n  function goNext() {\n    setScreen(screen + 1);\n  }\n\n  function goBack() {\n    setScreen(screen - 1);\n  }\n\n  const controls = [goBack, goNext, setInputScreens];\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: controls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, children));\n}\n\n_s(FlowProvider, \"9np5x5KXM4aWklWQMMQTMDfalRM=\");\n\n_c = FlowProvider;\nexport default FlowProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlowProvider\");","map":{"version":3,"sources":["/Users/yordanlasonov/Documents/GitHub/memory-wizzard-router/src/components/flowProvider.js"],"names":["React","createContext","useState","MemoryRouter","Router","Context","FlowProvider","children","screens","setScreens","screen","setScreen","setInputScreens","inputScreens","goNext","goBack","controls"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,YAAY,IAAIC,MAAzB,QAAuC,kBAAvC;AAEA,MAAMC,OAAO,gBAAGJ,aAAa,EAA7B;;AAEA,SAASK,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC;;AACA,WAASU,eAAT,CAA0BC,YAA1B,EAAwC;AACtCJ,IAAAA,UAAU,CAACI,YAAD,CAAV;AACD;;AACD,WAASC,MAAT,GAAkB;AAChBH,IAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD;;AACD,WAASK,MAAT,GAAkB;AAChBJ,IAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD;;AAED,QAAMM,QAAQ,GAAG,CAACD,MAAD,EAASD,MAAT,EAAiBF,eAAjB,CAAjB;AAEA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEI,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCT,QAApC,CADF,CADF;AAKD;;GApBQD,Y;;KAAAA,Y;AAsBT,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { createContext, useState } from \"react\";\nimport { MemoryRouter as Router } from \"react-router-dom\";\n\nconst Context = createContext();\n\nfunction FlowProvider({ children }) {\n  const [screens, setScreens] = useState([]);\n  const [screen, setScreen] = useState(0);\n  function setInputScreens (inputScreens) {\n    setScreens(inputScreens)\n  }\n  function goNext() {\n    setScreen(screen + 1);\n  }\n  function goBack() {\n    setScreen(screen - 1);\n  }\n\n  const controls = [goBack, goNext, setInputScreens];\n\n  return (\n    <Router>\n      <Context.Provider value={controls}>{children}</Context.Provider>\n    </Router>\n  );\n}\n\nexport default FlowProvider;\n"]},"metadata":{},"sourceType":"module"}